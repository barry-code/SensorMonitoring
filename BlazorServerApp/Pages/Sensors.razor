@page "/sensors"

@inject SensorService MySensorService

@if (AddNewSensor)
{
    <MudCard Elevation="2" Class="mt-5">
        <MudText>This is new sensor...</MudText>
    </MudCard>
    <MudButton Variant="Variant.Filled" EndIcon="@MudBlazor.Icons.Material.Filled.Cancel" Color="MudBlazor.Color.Error" OnClick="ToggleAddSensorMode" Class="mt-3">Cancel</MudButton>
    <MudButton Variant="Variant.Filled" EndIcon="@MudBlazor.Icons.Material.Filled.Save" Color="MudBlazor.Color.Success" OnClick="SaveNewSensor" Class="mt-3">Save</MudButton>
}
else
{
    <MudTable Items="@SensorList" Breakpoint="Breakpoint.None" Loading="@IsLoading" Elevation="2">
        <ToolBarContent>
            <MudText Typo="Typo.h6" Color="MudBlazor.Color.Primary">Sensors</MudText>
        </ToolBarContent>
        <HeaderContent>
            <MudTh>Name</MudTh>
            <MudTh>Description</MudTh>
            <MudTh>Id</MudTh>
            <MudTh Class="d-none d-md-table-cell">Delta</MudTh>
        </HeaderContent>
        <RowTemplate>
            <MudTd DataLabel="Name">@context.Name</MudTd>
            <MudTd DataLabel="Description">@context.Description</MudTd>
            <MudTd DataLabel="Id">@context.Id</MudTd>
            <MudTd DataLabel="Delta" Class="d-none d-md-table-cell">@context.Delta</MudTd>
        </RowTemplate>
    </MudTable>

    if (!IsLoading)
    {
        <MudButton Variant="Variant.Filled" Color="MudBlazor.Color.Success" EndIcon="@Icons.Material.Filled.Add" OnClick="ToggleAddSensorMode" Class="mt-3">Add Sensor</MudButton>
    }
}

@code {
    public List<SensorDTO> SensorList { get; set; } = new List<SensorDTO>();
    public bool IsLoading { get; set; }
    public bool AddNewSensor { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            IsLoading = true;

            var res = await MySensorService.GetSensors();

            SensorList.AddRange(res);

            await base.OnInitializedAsync();
        }
        catch (Exception)
        {
            throw;
        }
        finally
        {
            IsLoading = false;
        }
    }

    protected void ToggleAddSensorMode()
    {
        AddNewSensor = !AddNewSensor;
    }

    protected async Task SaveNewSensor()
    {
        await MySensorService.AddSensor();
    }
}
