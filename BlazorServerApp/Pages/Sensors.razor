@page "/sensors"

@inject SensorService MySensorService
<h3>Sensors</h3>
<div class="container-fluid">
    @if (IsLoading)
    {
        <button class="btn btn-dark" type="button" disabled>
            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
            Loading...
        </button>
    }    
    else
    {
        if (AddNewSensor)
        {
            <div>
            
            </div>
            <RadzenButton ButtonStyle="Radzen.ButtonStyle.Danger" Text="Cancel" Click="ToggleAddSensorMode"></RadzenButton>
            <RadzenButton ButtonStyle="Radzen.ButtonStyle.Success" Text="Save" Click="SaveNewSensor"></RadzenButton>
        }
        else
        {
            <RadzenDataGrid TItem="SensorDTO" Data="@SensorList">
                <EmptyTemplate>
                    <p style="color: lightgrey; font-size: 24px; text-align: center; margin: 2rem;">No sensors to display.</p>
                </EmptyTemplate>
                <Columns>
                    <RadzenDataGridColumn TItem="SensorDTO" Property="Name" Title="Name" />
                    <RadzenDataGridColumn TItem="SensorDTO" Property="Description" Title="Description" />
                    <RadzenDataGridColumn TItem="SensorDTO" Property="Delta" Title="Delta" />
                    <RadzenDataGridColumn TItem="SensorDTO" Property="Id" Title="Id" />
                </Columns>

            </RadzenDataGrid>
            <RadzenButton Text="Add New Sensor" ButtonStyle="Radzen.ButtonStyle.Success" Icon="add_circle_outline" Click="ToggleAddSensorMode"></RadzenButton>
        }        
    }
</div>

@code {
    public List<SensorDTO> SensorList { get; set; } = new List<SensorDTO>();
    public bool IsLoading { get; set; }
    public bool AddNewSensor { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            IsLoading = true;

            var res = await MySensorService.GetSensors();

            SensorList.AddRange(res);

            await base.OnInitializedAsync();
        }
        catch (Exception)
        {
            throw;
        }
        finally
        {
            IsLoading = false;
        }
    }

    protected void ToggleAddSensorMode()
    {
        AddNewSensor = !AddNewSensor;
    }

    protected async Task SaveNewSensor()
    {
        await MySensorService.AddSensor();
    }
}
