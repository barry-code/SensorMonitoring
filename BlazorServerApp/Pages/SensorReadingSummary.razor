@page "/sensorReadingSummary"
@page "/"
@using System.Collections.ObjectModel
@using Radzen;
@using Radzen.Blazor;


@inject SensorService MySensorService

<h5>Sensor Reading Summary</h5>

<div class="container-fluid">
    @if (IsLoading)
    {
        <button class="btn btn-dark" type="button" disabled>
            <span class="spinner-border spinner-border-sm" role="status" aria-hidden="true"></span>
            Loading...
        </button>
    }
    else{
        <RadzenDataGrid TItem="SensorSummary" Data="@Readings">
            <EmptyTemplate>
                <p style="color: lightgrey; font-size: 24px; text-align: center; margin: 2rem;">No sensors to display.</p>
            </EmptyTemplate>
            <Columns>
                <RadzenDataGridColumn TItem="SensorSummary" Property="Sensor.Name" Title="Name">
                    <Template>
                        <RadzenStack Orientation="Orientation.Horizontal">
                            <RadzenText>@context.Sensor.Name</RadzenText>
                            @if (context.IsCommsLost)
                            {
                                <RadzenIcon Icon="sensors_off" IconStyle="@IconStyle.Danger" />
                            }
                            else
                            {
                                <RadzenIcon Icon="sensors" IconStyle="@IconStyle.Success" />
                            }
                        </RadzenStack>
                    </Template>
                </RadzenDataGridColumn>
                <RadzenDataGridColumn TItem="SensorSummary" Property="LastReading" Title="Last Reading" />
                <RadzenDataGridColumn TItem="SensorSummary" Property="LastReadingTime" Title="Last Reading Time" />
            </Columns>

        </RadzenDataGrid>
    }

    <RadzenDataList TItem="IconStyle" Data="@(Enum.GetValues<IconStyle>())" WrapItems="true" class="rz-p-12">
        <Template Context="style">
            <div>
                <h5>@style.ToString()</h5>
                <RadzenIcon Icon="dashboard" IconStyle="@style" />
                <RadzenIcon Icon="open_with" IconStyle="@style" />
            </div>
        </Template>
    </RadzenDataList>
</div>

@code {
    private bool isFirstLoad;
    public bool IsLoading { get; set; }
    public ObservableCollection<SensorSummary> Readings { get; set; } = new ObservableCollection<SensorSummary>();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        isFirstLoad = firstRender;

        await base.OnAfterRenderAsync(firstRender);
    }

    protected override async Task OnInitializedAsync()
    {
        try
        {
            IsLoading = true;

            var res = await MySensorService.GetSensorReadingSummary();

            foreach (var item in res)
            {
                Readings.Add(item);
            }

            await base.OnInitializedAsync();
        }
        catch (Exception)
        {
            throw;
        }
        finally
        {
            IsLoading = false;
        }
    }
}
